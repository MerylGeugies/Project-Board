{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","store/actions/projectActions.js","components/projects/CreateProject.js","App.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","response","doc","set","createProject","authorId","add","Date","CreateProject","history","push","App","exact","path","component","ProjectDetails","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","projectReduver","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","userProfile","useFirestoreForProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.21ece0e3.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions';\n\nconst SignedInLinks = (props) => {\n  return (\n    <ul className='right'>\n      <li><NavLink to='/create'> New Project </NavLink> </li>\n      <li><a onClick={props.signOut}> Log Out </a> </li>\n      <li><NavLink to='/' className='btn btn-floating pink lighten-1'> \n      { props.profile.initials } \n      </NavLink> </li>\n    </ul>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    signOut: () => dispatch(signOut())\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    firebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password\n    ).then(() => {\n      dispatch({ type: 'LOGIN_SUCCES' });\n    }).catch((err) => {\n      dispatch({ type: 'LOGIN_ERROR', err });\n    });\n  }\n}\n\nexport const signOut = () => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    firebase.auth().signOut().then(() => {\n      dispatch({ type: 'SIGNOUT_SUCCES'});\n    })\n  }\n}\n\nexport const signUp = (newUser) => {\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase.auth().createUserWithEmailAndPassword(\n    newUser.email,\n    newUser.password\n    ).then((response) => {\n      return firestore.collection('users').doc(response.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initials: newUser.firstName[0] + newUser.lastName[0]\n      })\n    }).then(() => {\n      dispatch({ type: 'SIGNUP_SUCCES' })\n    }).catch(err => {\n      dispatch({ type: 'SIGNUP_ERROR', err })\n    })\n  }\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLinks = () => {\n  return (\n    <ul className='right'>\n      <li><NavLink to='/signup'>Sign Up</NavLink> </li>\n      <li><NavLink to='/signin'>Login</NavLink> </li>\n    </ul>\n  )\n}\n\nexport default SignedOutLinks","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from 'react-redux';\n\nconst Navbar = (props) => {\n  const { auth, profile } = props;\n  //console.log('auth', auth)\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\n  return (\n    <nav className='nav-wrapper grey darken-3'>\n      <div className='container'>\n        <Link to='/' className='brand-logo'> MarioPlan </Link>\n        { links }\n      </div>\n    </nav>\n  )\n}\nconst mapStateToProps = (state) => {\n  console.log('state from navbar', state)\n  return{\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  }\n}\n\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\nimport moment from 'moment';\n\nconst Notifications = (props) => {\n  const { notifications } = props;\n  return (\n    <div className='section'>\n      <div className='card z-depth-0'>\n        <div className='card-content'>\n          <span className='card-title'> Notifications </span>\n          <ul className='notifications'>\n            { notifications && notifications.map(item => {\n              return (\n                <li key={item.id}>\n                <span className='pink-text'> {item.user } </span>   \n                <span> {item.content} </span>\n                <div className='grey-text note-date'>\n                  {moment(item.time.toDate()).fromNow()}\n                </div>\n                </li>\n              )\n            }) }   \n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Notifications;","import React from 'react';\nimport moment from 'moment';\n\nconst ProjectSummary = ({project}) => {\n  return (\n    <div className='card z-depth-0 project-summary'>\n      <div className='card-content grey-text text-darken-3'>\n        <span className='card-title'>{project.title}</span>\n        <p> Posted by { project.authorFirstName} {project.authorLastName} </p>\n        <p className='grey-text'> { moment(project.createdAt.toDate()).calendar() } </p>\n      </div>\n    </div>\n  )\n}\n\nexport default ProjectSummary","import React from 'react';\nimport ProjectSummary from './ProjectSummary';\nimport { Link } from 'react-router-dom'\n\nconst ProjectList = ({projects}) => {\n  return (\n    <div className='project-list section'>\n      { projects && projects.map(project => {\n        return (\n          <Link to={'/project/' + project.id} key={project.id} >\n           <ProjectSummary project={project}/>\n          </Link>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default ProjectList","import React, { Component } from 'react';\nimport Notifications from './Notifications';\nimport ProjectList from '../projects/ProjectList';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\n\nclass Dashboard extends Component {\n  render() {\n    //console.log('Dashboard props', this.props)\n    const { projects, auth, notifications } = this.props;\n    if (!auth.uid) return <Redirect to='/signin' />\n    return (\n      <div className='dashboard container'>\n        <div className='row'>\n\n          {/* for projectlist */}\n          <div className='col s12 m6'>\n            <ProjectList projects={projects} />\n          </div>\n\n          {/* for notifications */}\n          <div className='col s12 m5 offset-m1'>\n            <Notifications notifications={notifications} />\n          </div>\n\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  //console.log('State Dashboard', state)\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  }\n}\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects', orderBy: ['createdAt', 'desc'] },\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\n  ])\n)(Dashboard);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\n\n\nconst ProjectDetails = (props) => {\n  const { project, auth } = props;\n  //console.log('props ProjectDetails', props)\n  if (!auth.uid) return <Redirect to='/signin' />\n\n  if (project) {\n    return (\n    <div className='container section project-details'>\n      <div className='card z-depth-0'>\n        <div className='card-content'>\n          <span className='card-title'> { project.title } </span>\n          <p> { project.content } </p>\n        </div>\n        <div className='card-action grey lighten-4 grey-text'>\n          <div> Posted by { project.authorFirstName }  { project.authorLastName } </div>\n          <div> { moment(project.createdAt.toDate()).calendar() } </div>\n        </div>\n      </div>\n    </div>\n    )} else {\n  return (\n    <div className='container center'>\n      <p> Loading project... </p>\n    </div>\n  )\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n  //console.log('state ProductDetails', state)\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null\n  return {\n    project: project,\n    auth: state.firebase.auth\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects'}\n  ])\n)(ProjectDetails)","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { signIn } from '../../store/actions/authActions';\nimport { Redirect } from 'react-router-dom';\n\nclass SignIn extends Component {\n  state = {\n    email: '',\n    password: ''\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signIn(this.state);\n    //console.log('this.state',this.state)\n  }\n\n  render() {\n    const { authError, auth } = this.props;\n    if (auth.uid) return <Redirect to='/' />\n\n    return(\n      <div className='container'>\n        <form onSubmit={this.handleSubmit} className='white'>\n          <h5 className='grey-text text-darken-3'>Sign In</h5>\n          <div className='input-field'>\n            <label htmlFor='email'>E-mail</label>\n            <input type='email' id='email' onChange={this.handleChange}/>\n          </div>\n\n          <div className='input-field'>\n            <label htmlFor='password'>Password</label>\n            <input type='password' id='password' onChange={this.handleChange}/>\n          </div>\n\n          <div className='input-field'>\n            <button className='btn pink lighten-1 z-depth-0'>Login</button>\n\n            <div className='red-text center'>\n              { authError ? <p>{authError}</p> : null }\n            </div>\n          </div>\n\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return{\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    signIn: (creds) => dispatch(signIn(creds))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { signUp } from '../../store/actions/authActions';\n\nclass SignUp extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: ''\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    //console.log('this.state',this.state)\n    this.props.signUp(this.state);\n  }\n\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) return <Redirect to='/' />\n\n    return(\n      <div className='container'>\n        <form onSubmit={this.handleSubmit} className='white'>\n          <h5 className='grey-text text-darken-3'>Sign up</h5>\n          <div className='input-field'>\n            <label htmlFor='email'>E-mail</label>\n            <input type='email' id='email' onChange={this.handleChange}/>\n          </div>\n\n          <div className='input-field'>\n            <label htmlFor='password'>Password</label>\n            <input type='password' id='password' onChange={this.handleChange}/>\n          </div>\n\n          <div className='input-field'>\n            <label htmlFor='firstName'>First Name</label>\n            <input type='text' id='firstName' onChange={this.handleChange}/>\n          </div>\n\n          <div className='input-field'>\n            <label htmlFor='lastName'>Last Name</label>\n            <input type='text' id='lastName' onChange={this.handleChange}/>\n          </div>\n\n          <div className='input-field'>\n            <button className='btn pink lighten-1 z-depth-0'>Sign up</button>\n          <div className='red-text center'>\n            { authError ? <p> { authError } </p> : null }\n          </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signUp: (newUser) => dispatch(signUp(newUser))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","export const createProject = (project) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    //make async call to database\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n    firestore.collection('projects').add({\n      ...project,\n      authorFirstName: profile.firstName,\n      authorLastName: profile.lastName,\n      authorId: authorId,\n      createdAt: new Date()\n    }).then(() => {\n      dispatch( {type: 'CREATE_PROJECT', project })\n    }).catch((err) => {\n      dispatch({ type: 'CREATE_PROJECT_ERROR', err })\n    })\n    \n  }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createProject } from '../../store/actions/projectActions';\nimport { Redirect } from 'react-router-dom';\n\nclass CreateProject extends Component {\n  state = {\n    title: '',\n    content: ''\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.createProject(this.state)\n    this.props.history.push('/')\n    //console.log('this.state',this.state)\n  }\n\n  render() {\n    const { auth } = this.props;\n    if (!auth.uid) return <Redirect to='/signin' />\n\n    return(\n      <div className='container'>\n        <form className='white' onSubmit={this.handleSubmit} >\n          <h5 className='grey-text text-darken-3'>Add project</h5>\n\n          <div className='input-field'>\n            <label htmlFor='title'>Title</label>\n            <input type='text' id='title' onChange={this.handleChange}/>\n          </div>\n\n          <div className='input-field'>\n            <label htmlFor='content'> Project Content</label>\n            <textarea id='content' className='materialize-textarea' onChange={this.handleChange}></textarea>\n          </div>\n\n          <div className='input-field'>\n            <button className='btn pink lighten-1 z-depth-0'>Create</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return{\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createProject: (project) => dispatch(createProject(project))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (CreateProject);","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route} from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter> \n        <div className='App'>\n          <Navbar />\n          <Switch> \n            <Route exact path='/' component={Dashboard} />   \n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n    </BrowserRouter>\n    );\n    }\n}\n\nexport default App;\n","const initState = {\n  authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n  switch(action.type){\n    case 'LOGIN_ERROR':\n        console.log('Login error')\n      return {\n        ...state,\n        authError: 'Login failed'\n      }\n\n    case 'LOGIN_SUCCES':\n      console.log('Login succes')\n      return{\n        ...state,\n        authError: null\n      }\n      \n    case 'SIGNOUT_SUCCES':\n      console.log('Signout succes')\n      return state;\n\n    case 'SIGNUP_SUCCES':\n      console.log('signup succes');\n      return {\n        ...state,\n        authError: null\n      }\n\n    case 'SIGNUP_ERROR':\n      console.log('signup error');\n      return {\n        ...state,\n        authError: action.err.message\n      }\n\n    default: \n      return state;\n  }\n}\n\nexport default authReducer","const initState = {\n  projects:[\n    {id: '1', title: 'Help me find Peach', content: 'The assignment'},\n    {id: '2', title: 'Collect all the stars', content: 'The assignment'},\n    {id: '3', title: 'Egg hunt with Yoshi', content: 'The assignment'}\n  ]\n}\n\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'CREATE_PROJECT':\n      console.log('created project', action.project)\n      return state;\n    case 'CREATE_PROJECT_ERROR':\n      console.log('create project error', action.err)\n      return state;\n    default: \n      return state;\n  }\n}\n\nexport default projectReducer","import authReducer from './authReducer';\nimport projectReduver from './projectReducer';\nimport { combineReducers} from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReduver,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\nexport default rootReducer;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n//from firebase\nvar config = {\n  apiKey: \"AIzaSyCZo80iLsaL3WocqhPGEIayNuMv9rrxwBY\",\n  authDomain: \"mario-plan-1c9bc.firebaseapp.com\",\n  databaseURL: \"https://mario-plan-1c9bc.firebaseio.com\",\n  projectId: \"mario-plan-1c9bc\",\n  storageBucket: \"\",\n  messagingSenderId: \"488627513197\",\n  appId: \"1:488627513197:web:470dee28482d54a7339c64\"\n};\nfirebase.initializeApp(config);\nfirebase.firestore().settings({ timestampsInSnapshots: true })\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\n\nconst store = createStore(rootReducer, \n  compose( \n  applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n  //store enhandcers\n  reduxFirestore(fbConfig),\n  reactReduxFirebase(fbConfig, { userProfile: 'users', useFirestoreForProfile: true, attachAuthIsReady: true })\n)\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n// registerServiceWorker();\n})\n\n\n"],"sourceRoot":""}